/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../../contracts/erc4337/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052604051620000129062000055565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b50600160025562000063565b6102138062003ff283390190565b608051613f6c620000866000396000818161129c0152612dc30152613f6c6000f3fe6080604052600436106101235760003560e01c80638f41ec5a116100a0578063bb9fe6bf11610064578063bb9fe6bf1461043a578063c23a5cea1461044f578063d6383f941461046f578063ee2194231461048f578063fc7e286d146104af57600080fd5b80638f41ec5a146103b2578063957122ab146103c75780639b249f69146103e7578063a619353114610407578063b760faf91461042757600080fd5b8063205c2878116100e7578063205c2878146101f657806335567e1a146102165780634b1d7cf5146102365780635287ce121461025657806370a082311461037357600080fd5b80630396cb60146101385780630bd28e3b1461014b5780631b2e01b81461016b5780631d732756146101b65780631fad948c146101d657600080fd5b366101335761013133610564565b005b600080fd5b610131610146366004613096565b6105cb565b34801561015757600080fd5b506101316101663660046130d8565b61085a565b34801561017757600080fd5b506101a3610186366004613113565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156101c257600080fd5b506101a36101d136600461330d565b610891565b3480156101e257600080fd5b506101316101f1366004613416565b610a04565b34801561020257600080fd5b5061013161021136600461346c565b610b80565b34801561022257600080fd5b506101a3610231366004613113565b610cfc565b34801561024257600080fd5b50610131610251366004613416565b610d42565b34801561026257600080fd5b5061031b610271366004613498565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a08101845281546001600160701b038082168352600160701b820460ff16151594830194909452600160781b90049092169282019290925260019091015463ffffffff81166060830152640100000000900465ffffffffffff16608082015290565b6040805182516001600160701b03908116825260208085015115159083015283830151169181019190915260608083015163ffffffff169082015260809182015165ffffffffffff169181019190915260a0016101ad565b34801561037f57600080fd5b506101a361038e366004613498565b6001600160a01b03166000908152602081905260409020546001600160701b031690565b3480156103be57600080fd5b506101a3600181565b3480156103d357600080fd5b506101316103e23660046134b5565b611185565b3480156103f357600080fd5b50610131610402366004613539565b611282565b34801561041357600080fd5b506101a3610422366004613593565b61133d565b610131610435366004613498565b610564565b34801561044657600080fd5b5061013161137f565b34801561045b57600080fd5b5061013161046a366004613498565b6114a8565b34801561047b57600080fd5b5061013161048a3660046135c7565b6116e0565b34801561049b57600080fd5b506101316104aa366004613593565b6117db565b3480156104bb57600080fd5b5061051e6104ca366004613498565b600060208190529081526040902080546001909101546001600160701b0380831692600160701b810460ff1692600160781b9091049091169063ffffffff811690640100000000900465ffffffffffff1685565b604080516001600160701b0396871681529415156020860152929094169183019190915263ffffffff16606082015265ffffffffffff909116608082015260a0016101ad565b61056e81346119b7565b6001600160a01b03811660008181526020818152604091829020805492516001600160701b03909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff82166106325760405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064015b60405180910390fd5b600181015463ffffffff90811690831610156106905760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606401610629565b80546000906106b0903490600160781b90046001600160701b031661363e565b9050600081116106f75760405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606401610629565b6001600160701b0381111561073f5760405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606401610629565b6040805160a08101825283546001600160701b0390811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a902098518954955194518916600160781b02600160781b600160e81b0319951515600160701b026effffffffffffffffffffffffffffff199097169190991617949094179290921695909517865551949092018054925165ffffffffffff166401000000000269ffffffffffffffffffff19909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c019061084d908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b3360009081526001602090815260408083206001600160c01b0385168452909152812080549161088983613651565b919050555050565b6000805a90503330146108e65760405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606401610629565b8451604081015160608201518101611388015a10156109105763deaddead60e01b60005260206000fd5b8751600090156109a457600061092d846000015160008c86611a53565b9050806109a2576000610941610800611a6b565b80519091501561099c5784600001516001600160a01b03168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2018760200151846040516109939291906136ba565b60405180910390a35b60019250505b505b600088608001515a86030190506109f66000838b8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611a97915050565b9a9950505050505050505050565b610a0c611d8e565b816000816001600160401b03811115610a2757610a27613148565b604051908082528060200260200182016040528015610a6057816020015b610a4d61300c565b815260200190600190039081610a455790505b50905060005b82811015610ad9576000828281518110610a8257610a826136d3565b60200260200101519050600080610abd848a8a87818110610aa557610aa56136d3565b9050602002810190610ab791906136e9565b85611db6565b91509150610ace8483836000611fa1565b505050600101610a66565b506040516000907fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972908290a160005b83811015610b6357610b5781888884818110610b2657610b266136d3565b9050602002810190610b3891906136e9565b858481518110610b4a57610b4a6136d3565b602002602001015161213d565b90910190600101610b08565b50610b6e8482612264565b505050610b7b6001600255565b505050565b33600090815260208190526040902080546001600160701b0316821115610be95760405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606401610629565b8054610bff9083906001600160701b031661370a565b81546001600160701b0319166001600160701b0391909116178155604080516001600160a01b03851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610cab576040519150601f19603f3d011682016040523d82523d6000602084013e610cb0565b606091505b5050905080610cf65760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606401610629565b50505050565b6001600160a01b03821660009081526001602090815260408083206001600160c01b038516845290915290819020549082901b67ffffffffffffffff1916175b92915050565b610d4a611d8e565b816000805b82811015610ebe5736868683818110610d6a57610d6a6136d3565b9050602002810190610d7c919061371d565b9050366000610d8b8380613733565b90925090506000610da26040850160208601613498565b90506000196001600160a01b03821601610dfe5760405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152606401610629565b6001600160a01b03811615610e9b576001600160a01b03811663e3563a4f8484610e2b604089018961377c565b6040518563ffffffff1660e01b8152600401610e4a9493929190613927565b60006040518083038186803b158015610e6257600080fd5b505afa925050508015610e73575060015b610e9b5760405163086a9f7560e41b81526001600160a01b0382166004820152602401610629565b610ea5828761363e565b9550505050508080610eb690613651565b915050610d4f565b506000816001600160401b03811115610ed957610ed9613148565b604051908082528060200260200182016040528015610f1257816020015b610eff61300c565b815260200190600190039081610ef75790505b506040519091507fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f97290600090a16000805b848110156110275736888883818110610f5e57610f5e6136d3565b9050602002810190610f70919061371d565b9050366000610f7f8380613733565b90925090506000610f966040850160208601613498565b90508160005b8181101561100e576000898981518110610fb857610fb86136d3565b60200260200101519050600080610fdb8b898987818110610aa557610aa56136d3565b91509150610feb84838389611fa1565b8a610ff581613651565b9b5050505050808061100690613651565b915050610f9c565b505050505050808061101f90613651565b915050610f43565b50600080915060005b85811015611140573689898381811061104b5761104b6136d3565b905060200281019061105d919061371d565b905061106f6040820160208301613498565b6001600160a01b03167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a23660006110b18380613733565b90925090508060005b81811015611128576110fc888585848181106110d8576110d86136d3565b90506020028101906110ea91906136e9565b8b8b81518110610b4a57610b4a6136d3565b611106908861363e565b96508761111281613651565b985050808061112090613651565b9150506110ba565b5050505050808061113890613651565b915050611030565b506040516000907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a26111768682612264565b5050505050610b7b6001600255565b8315801561119b57506001600160a01b0383163b155b156111e85760405162461bcd60e51b815260206004820152601960248201527f41413230206163636f756e74206e6f74206465706c6f796564000000000000006044820152606401610629565b601481106112605760006111ff60148284866139a4565b611208916139ce565b60601c9050803b60000361125e5760405162461bcd60e51b815260206004820152601b60248201527f41413330207061796d6173746572206e6f74206465706c6f79656400000000006044820152606401610629565b505b60405162461bcd60e51b81526020600482015260006024820152604401610629565b604051632b870d1b60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a36906112d39086908690600401613a03565b6020604051808303816000875af11580156112f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113169190613a17565b604051633653dc0360e11b81526001600160a01b0382166004820152909150602401610629565b60006113488261235d565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff90911690036113d85760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b6044820152606401610629565b8054600160701b900460ff166114245760405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606401610629565b600181015460009061143c9063ffffffff1642613a34565b60018301805469ffffffffffff00000000191664010000000065ffffffffffff841690810291909117909155835460ff60701b1916845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a906020016105bf565b3360009081526020819052604090208054600160781b90046001600160701b03168061150d5760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606401610629565b6001820154640100000000900465ffffffffffff1661156e5760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606401610629565b60018201544264010000000090910465ffffffffffff1611156115d35760405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606401610629565b60018201805469ffffffffffffffffffff191690558154600160781b600160e81b0319168255604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d806000811461168a576040519150601f19603f3d011682016040523d82523d6000602084013e61168f565b606091505b5050905080610cf65760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606401610629565b6116e861300c565b6116f185612376565b60008061170060008885611db6565b9150915060006117108383612450565b905061171b43600052565b600061172960008a8761213d565b905061173443600052565b600060606001600160a01b038a16156117aa57896001600160a01b03168989604051611761929190613a5a565b6000604051808303816000865af19150503d806000811461179e576040519150601f19603f3d011682016040523d82523d6000602084013e6117a3565b606091505b5090925090505b866080015183856020015186604001518585604051630116f59360e71b815260040161062996959493929190613a6a565b6117e361300c565b6117ec82612376565b6000806117fb60008585611db6565b915091506000611812846000015160a0015161251c565b8451519091506000906118249061251c565b9050611843604051806040016040528060008152602001600081525090565b36600061185360408a018a61377c565b90925090506000601482101561186a576000611885565b6118786014600084866139a4565b611881916139ce565b60601c5b90506118908161251c565b935050505060006118a18686612450565b9050600081600001519050600060016001600160a01b0316826001600160a01b031614905060006040518060c001604052808b6080015181526020018b6040015181526020018315158152602001856020015165ffffffffffff168152602001856040015165ffffffffffff16815260200161191e8c6060015190565b905290506001600160a01b0383161580159061194457506001600160a01b038316600114155b156119965760006040518060400160405280856001600160a01b0316815260200161196e8661251c565b81525090508187878a84604051633ebb2d3960e21b8152600401610629959493929190613b0c565b8086868960405163e0cff05f60e01b81526004016106299493929190613b8c565b6001600160a01b038216600090815260208190526040812080549091906119e89084906001600160701b031661363e565b90506001600160701b03811115611a345760405162461bcd60e51b815260206004820152601060248201526f6465706f736974206f766572666c6f7760801b6044820152606401610629565b81546001600160701b0319166001600160701b03919091161790555050565b6000806000845160208601878987f195945050505050565b60603d82811115611a795750815b604051602082018101604052818152816000602083013e9392505050565b6000805a855190915060009081611aad8261256b565b60a08301519091506001600160a01b038116611acc5782519350611c73565b809350600088511115611c7357868202955060028a6002811115611af257611af2613be3565b14611b6457606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611b2c908e908d908c90600401613bf9565b600060405180830381600088803b158015611b4657600080fd5b5087f1158015611b5a573d6000803e3d6000fd5b5050505050611c73565b606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611b99908e908d908c90600401613bf9565b600060405180830381600088803b158015611bb357600080fd5b5087f193505050508015611bc5575060015b611c7357611bd1613c40565b806308c379a003611c2a5750611be5613c5c565b80611bf05750611c2c565b8b81604051602001611c029190613ce5565b60408051601f1981840301815290829052631101335b60e11b825261062992916004016136ba565b505b8a604051631101335b60e11b81526004016106299181526040602082018190526012908201527110504d4c081c1bdcdd13dc081c995d995c9d60721b606082015260800190565b5a85038701965081870295508589604001511015611cdc578a604051631101335b60e11b815260040161062991815260406020808301829052908201527f414135312070726566756e642062656c6f772061637475616c476173436f7374606082015260800190565b6040890151869003611cee85826119b7565b6000808c6002811115611d0357611d03613be3565b1490508460a001516001600160a01b031685600001516001600160a01b03168c602001517f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f8860200151858d8f604051611d76949392919093845291151560208401526040830152606082015260800190565b60405180910390a45050505050505095945050505050565b6002805403611db057604051633ee5aeb560e01b815260040160405180910390fd5b60028055565b60008060005a8451909150611dcb868261259b565b611dd48661133d565b6020860152604081015160608201516080830151171760e087013517610100870135176effffffffffffffffffffffffffffff811115611e565760405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606401610629565b600080611e6284612694565b9050611e708a8a8a846126e1565b85516020870151919950919350611e879190612919565b611edd5789604051631101335b60e11b8152600401610629918152604060208201819052601a908201527f4141323520696e76616c6964206163636f756e74206e6f6e6365000000000000606082015260800190565b611ee643600052565b60a08401516060906001600160a01b031615611f0e57611f098b8b8b8587612966565b975090505b60005a87039050808b60a001351015611f73578b604051631101335b60e11b8152600401610629918152604060208201819052601e908201527f41413430206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60408a018390528160608b015260c08b01355a8803018a608001818152505050505050505050935093915050565b600080611fad85612b89565b91509150816001600160a01b0316836001600160a01b0316146120135785604051631101335b60e11b81526004016106299181526040602082018190526014908201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b801561206b5785604051631101335b60e11b81526004016106299181526040602082018190526017908201527f414132322065787069726564206f72206e6f7420647565000000000000000000606082015260800190565b600061207685612b89565b925090506001600160a01b038116156120d25786604051631101335b60e11b81526004016106299181526040602082018190526014908201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b81156121345786604051631101335b60e11b81526004016106299181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f742064756060820152606560f81b608082015260a00190565b50505050505050565b6000805a90506000612150846060015190565b905030631d732756612165606088018861377c565b87856040518563ffffffff1660e01b81526004016121869493929190613d23565b6020604051808303816000875af19250505080156121c1575060408051601f3d908101601f191682019092526121be91810190613dd6565b60015b61225857600060206000803e50600051632152215360e01b81016122235786604051631101335b60e11b8152600401610629918152604060208201819052600f908201526e41413935206f7574206f662067617360881b606082015260800190565b600085608001515a612235908661370a565b61223f919061363e565b905061224f886002888685611a97565b9450505061225b565b92505b50509392505050565b6001600160a01b0382166122ba5760405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606401610629565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612307576040519150601f19603f3d011682016040523d82523d6000602084013e61230c565b606091505b5050905080610b7b5760405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606401610629565b600061236882612bdc565b805190602001209050919050565b3063957122ab612389604084018461377c565b6123966020860186613498565b6123a461012087018761377c565b6040518663ffffffff1660e01b81526004016123c4959493929190613def565b60006040518083038186803b1580156123dc57600080fd5b505afa9250505080156123ed575060015b61244d576123f9613c40565b806308c379a003612441575061240d613c5c565b806124185750612443565b80511561243d57600081604051631101335b60e11b81526004016106299291906136ba565b5050565b505b3d6000803e3d6000fd5b50565b604080516060810182526000808252602082018190529181018290529061247684612caf565b9050600061248384612caf565b82519091506001600160a01b03811661249a575080515b602080840151604080860151928501519085015191929165ffffffffffff80831690851610156124c8578193505b8065ffffffffffff168365ffffffffffff1611156124e4578092505b5050604080516060810182526001600160a01b03909416845265ffffffffffff92831660208501529116908201529250505092915050565b604080518082018252600080825260208083018281526001600160a01b03959095168252819052919091208054600160781b90046001600160701b031682526001015463ffffffff1690915290565b60c081015160e082015160009190808203612587575092915050565b61259382488301612d20565b949350505050565b6125a86020830183613498565b6001600160a01b0316815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e080840135918301919091526101008301359082015236600061260761012085018561377c565b909250905080156126875760148110156126635760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606401610629565b6126716014600083856139a4565b61267a916139ce565b60601c60a0840152610cf6565b600060a084015250505050565b60a081015160009081906001600160a01b03166126b25760016126b5565b60035b60ff16905060008360800151828560600151028560400151010190508360c00151810292505050919050565b60008060005a8551805191925090612706898861270160408c018c61377c565b612d38565b60a082015161271443600052565b60006001600160a01b03821661275c576001600160a01b0383166000908152602081905260409020546001600160701b031688811161275557808903612758565b60005b9150505b606084015160208a0151604051633a871cdd60e01b81526001600160a01b03861692633a871cdd929091612796918f918790600401613e25565b60206040518083038160008887f1935050505080156127d2575060408051601f3d908101601f191682019092526127cf91810190613dd6565b60015b61285c576127de613c40565b806308c379a00361280f57506127f2613c5c565b806127fd5750612811565b8b81604051602001611c029190613e4a565b505b8a604051631101335b60e11b8152600401610629918152604060208201819052601690820152754141323320726576657274656420286f72204f4f472960501b606082015260800190565b95506001600160a01b038216612906576001600160a01b038316600090815260208190526040902080546001600160701b0316808a11156128e9578c604051631101335b60e11b81526004016106299181526040602082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000606082015260800190565b81546001600160701b031916908a90036001600160701b03161790555b5a85039650505050505094509492505050565b6001600160a01b038216600090815260016020908152604080832084821c80855292528220805484916001600160401b03831691908561295883613651565b909155501495945050505050565b825160608181015190916000918481116129c25760405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152606401610629565b60a08201516001600160a01b038116600090815260208190526040902080548784039291906001600160701b031689811015612a4a578c604051631101335b60e11b8152600401610629918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b8981038260000160006101000a8154816001600160701b0302191690836001600160701b03160217905550826001600160a01b031663f465c77e858e8e602001518e6040518563ffffffff1660e01b8152600401612aaa93929190613e25565b60006040518083038160008887f193505050508015612aeb57506040513d6000823e601f3d908101601f19168201604052612ae89190810190613e81565b60015b612b7557612af7613c40565b806308c379a003612b285750612b0b613c5c565b80612b165750612b2a565b8d81604051602001611c029190613f0c565b505b8c604051631101335b60e11b8152600401610629918152604060208201819052601690820152754141333320726576657274656420286f72204f4f472960501b606082015260800190565b909e909d509b505050505050505050505050565b60008082600003612b9f57506000928392509050565b6000612baa84612caf565b9050806040015165ffffffffffff16421180612bd15750806020015165ffffffffffff1642105b905194909350915050565b6060813560208301356000612bfc612bf7604087018761377c565b612ff9565b90506000612c10612bf7606088018861377c565b9050608086013560a087013560c088013560e08901356101008a01356000612c3f612bf76101208e018e61377c565b604080516001600160a01b039c909c1660208d01528b81019a909a5260608b019890985250608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408084019190915281518084039091018152610160909201905292915050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff8116600003612ceb575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6000818310612d2f5781612d31565b825b9392505050565b8015610cf6578251516001600160a01b0381163b15612da35784604051631101335b60e11b8152600401610629918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b835160600151604051632b870d1b60e11b81526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163570e1a369190612dfb9088908890600401613a03565b60206040518083038160008887f1158015612e1a573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612e3f9190613a17565b90506001600160a01b038116612ea15785604051631101335b60e11b8152600401610629918152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b816001600160a01b0316816001600160a01b031614612f0b5785604051631101335b60e11b815260040161062991815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b806001600160a01b03163b600003612f6e5785604051631101335b60e11b815260040161062991815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b6000612f7d60148286886139a4565b612f86916139ce565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160a00151604051612fe89291906001600160a01b0392831681529116602082015260400190565b60405180910390a350505050505050565b6000604051828085833790209392505050565b6040518060a0016040528061307160405180610100016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b6000602082840312156130a857600080fd5b813563ffffffff81168114612d3157600080fd5b80356001600160c01b03811681146130d357600080fd5b919050565b6000602082840312156130ea57600080fd5b612d31826130bc565b6001600160a01b038116811461244d57600080fd5b80356130d3816130f3565b6000806040838503121561312657600080fd5b8235613131816130f3565b915061313f602084016130bc565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60a081018181106001600160401b038211171561317d5761317d613148565b60405250565b61010081018181106001600160401b038211171561317d5761317d613148565b601f8201601f191681016001600160401b03811182821017156131c8576131c8613148565b6040525050565b60006001600160401b038211156131e8576131e8613148565b50601f01601f191660200190565b600081830361018081121561320a57600080fd5b6040516132168161315e565b8092506101008083121561322957600080fd5b604051925061323783613183565b61324085613108565b83526020850135602084015260408501356040840152606085013560608401526080850135608084015261327660a08601613108565b60a084015260c085013560c084015260e085013560e084015282825280850135602083015250610120840135604082015261014084013560608201526101608401356080820152505092915050565b60008083601f8401126132d757600080fd5b5081356001600160401b038111156132ee57600080fd5b60208301915083602082850101111561330657600080fd5b9250929050565b6000806000806101c0858703121561332457600080fd5b84356001600160401b038082111561333b57600080fd5b818701915087601f83011261334f57600080fd5b813561335a816131cf565b60405161336782826131a3565b8281528a602084870101111561337c57600080fd5b826020860160208301376000602084830101528098505050506133a288602089016131f6565b94506101a08701359150808211156133b957600080fd5b506133c6878288016132c5565b95989497509550505050565b60008083601f8401126133e457600080fd5b5081356001600160401b038111156133fb57600080fd5b6020830191508360208260051b850101111561330657600080fd5b60008060006040848603121561342b57600080fd5b83356001600160401b0381111561344157600080fd5b61344d868287016133d2565b9094509250506020840135613461816130f3565b809150509250925092565b6000806040838503121561347f57600080fd5b823561348a816130f3565b946020939093013593505050565b6000602082840312156134aa57600080fd5b8135612d31816130f3565b6000806000806000606086880312156134cd57600080fd5b85356001600160401b03808211156134e457600080fd5b6134f089838a016132c5565b909750955060208801359150613505826130f3565b9093506040870135908082111561351b57600080fd5b50613528888289016132c5565b969995985093965092949392505050565b6000806020838503121561354c57600080fd5b82356001600160401b0381111561356257600080fd5b61356e858286016132c5565b90969095509350505050565b6000610160828403121561358d57600080fd5b50919050565b6000602082840312156135a557600080fd5b81356001600160401b038111156135bb57600080fd5b6125938482850161357a565b600080600080606085870312156135dd57600080fd5b84356001600160401b03808211156135f457600080fd5b6136008883890161357a565b955060208701359150613612826130f3565b909350604086013590808211156133b957600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610d3c57610d3c613628565b60006001820161366357613663613628565b5060010190565b60005b8381101561368557818101518382015260200161366d565b50506000910152565b600081518084526136a681602086016020860161366a565b601f01601f19169290920160200192915050565b828152604060208201526000612593604083018461368e565b634e487b7160e01b600052603260045260246000fd5b6000823561015e1983360301811261370057600080fd5b9190910192915050565b81810381811115610d3c57610d3c613628565b60008235605e1983360301811261370057600080fd5b6000808335601e1984360301811261374a57600080fd5b8301803591506001600160401b0382111561376457600080fd5b6020019150600581901b360382131561330657600080fd5b6000808335601e1984360301811261379357600080fd5b8301803591506001600160401b038211156137ad57600080fd5b60200191503681900382131561330657600080fd5b6000808335601e198436030181126137d957600080fd5b83016020810192503590506001600160401b038111156137f857600080fd5b80360382131561330657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600061016061384f8461384285613108565b6001600160a01b03169052565b6020830135602085015261386660408401846137c2565b8260408701526138798387018284613807565b9250505061388a60608401846137c2565b858303606087015261389d838284613807565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e08501526101008084013581860152506101206138e4818501856137c2565b868403838801526138f6848284613807565b935050505061014061390a818501856137c2565b8684038388015261391c848284613807565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b8981101561398d57868503605f190184528235368c900361015e1901811261396b578283fd5b613977868d8301613830565b9550506020938401939290920191600101613945565b50505050828103602084015261391c818587613807565b600080858511156139b457600080fd5b838611156139c157600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156139fb5780818660140360031b1b83161692505b505092915050565b602081526000612593602083018486613807565b600060208284031215613a2957600080fd5b8151612d31816130f3565b65ffffffffffff818116838216019080821115613a5357613a53613628565b5092915050565b8183823760009101908152919050565b868152856020820152600065ffffffffffff8087166040840152808616606084015250831515608083015260c060a0830152613aa960c083018461368e565b98975050505050505050565b80518252602081015160208301526040810151151560408301526000606082015165ffffffffffff8082166060860152806080850151166080860152505060a082015160c060a085015261259360c085018261368e565b6000610140808352613b2081840189613ab5565b915050613b3a602083018780518252602090810151910152565b845160608301526020948501516080830152835160a08301529284015160c082015281516001600160a01b031660e0820152908301518051610100830152909201516101209092019190915292915050565b60e081526000613b9f60e0830187613ab5565b9050613bb8602083018680518252602090810151910152565b8351606083015260208401516080830152825160a0830152602083015160c083015295945050505050565b634e487b7160e01b600052602160045260246000fd5b600060038510613c1957634e487b7160e01b600052602160045260246000fd5b84825260606020830152613c30606083018561368e565b9050826040830152949350505050565b600060033d1115613c595760046000803e5060005160e01c5b90565b600060443d1015613c6a5790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715613c9957505050505090565b8285019150815181811115613cb15750505050505090565b843d8701016020828501011115613ccb5750505050505090565b613cda602082860101876131a3565b509095945050505050565b75020a09a98103837b9ba27b8103932bb32b93a32b21d160551b815260008251613d1681601685016020870161366a565b9190910160160192915050565b60006101c0808352613d388184018789613807565b9050845160018060a01b03808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a084015261391c818561368e565b600060208284031215613de857600080fd5b5051919050565b606081526000613e03606083018789613807565b6001600160a01b03861660208401528281036040840152613aa9818587613807565b606081526000613e386060830186613830565b60208301949094525060400152919050565b6e020a09919903932bb32b93a32b21d1608d1b815260008251613e7481600f85016020870161366a565b91909101600f0192915050565b60008060408385031215613e9457600080fd5b82516001600160401b03811115613eaa57600080fd5b8301601f81018513613ebb57600080fd5b8051613ec6816131cf565b604051613ed382826131a3565b828152876020848601011115613ee857600080fd5b613ef983602083016020870161366a565b6020969096015195979596505050505050565b6e020a09999903932bb32b93a32b21d1608d1b815260008251613e7481600f85016020870161366a56fea26469706673582212208cc97e0934bdde6ac99d7bd6425c7e71bfa9874f3c61c831ba4f3720b81c4f4064736f6c63430008140033608060405234801561001057600080fd5b506101f3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100ec565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60008061006f601482858761015e565b61007891610188565b60601c9050600061008c846014818861015e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100e357600093505b50505092915050565b600080602083850312156100ff57600080fd5b823567ffffffffffffffff8082111561011757600080fd5b818501915085601f83011261012b57600080fd5b81358181111561013a57600080fd5b86602082850101111561014c57600080fd5b60209290920196919550909350505050565b6000808585111561016e57600080fd5b8386111561017b57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156101b55780818660140360031b1b83161692505b50509291505056fea26469706673582212207ba38bd6cdb4278ae982c86a5e991b906b86bc749734e5115c2cc103f8ffdfba64736f6c63430008140033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EntryPoint & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EntryPoint__factory {
    return super.connect(runner) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new Interface(_abi) as EntryPointInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EntryPoint {
    return new Contract(address, _abi, runner) as unknown as EntryPoint;
  }
}

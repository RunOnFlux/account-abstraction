/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumber, Signer, utils } from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface IMultiSigSmartAccountInterface extends utils.Interface {
  functions: {};

  events: {
    "MultiSigAccountInitialized(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "MultiSigAccountInitialized"): EventFragment;
}

export interface MultiSigAccountInitializedEventObject {
  entryPoint: string;
  pubKeysCounter: BigNumber;
}
export type MultiSigAccountInitializedEvent = TypedEvent<
  [string, BigNumber],
  MultiSigAccountInitializedEventObject
>;

export type MultiSigAccountInitializedEventFilter =
  TypedEventFilter<MultiSigAccountInitializedEvent>;

export interface IMultiSigSmartAccount extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IMultiSigSmartAccountInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "MultiSigAccountInitialized(address,uint256)"(
      entryPoint?: null,
      pubKeysCounter?: null
    ): MultiSigAccountInitializedEventFilter;
    MultiSigAccountInitialized(
      entryPoint?: null,
      pubKeysCounter?: null
    ): MultiSigAccountInitializedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
